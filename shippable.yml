# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - BUCKETNAME="devops.recipes.nodecluster.packages"

build:

  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shippable_retry npm install
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  # http://docs.shippable.com/ci/shippableyml/#post_ci
  post_ci:
    - echo "$SHIPPABLE_BUILD_DIR"
    - echo "$SHIPPABLE_REPO_DIR"
    - if [ $IS_PULL_REQUEST == "false" ] ; then BUCKETKEY="$DEPLOYNODECLUSTERBASICAPPFILE_NAME.tar.gz"; fi;
    - if [ $IS_PULL_REQUEST == "false" ] ; then pushd $SHIPPABLE_REPO_DIR && tar cfz /tmp/$BUCKETKEY . && popd; fi;
    - if [ $IS_PULL_REQUEST == "false" ] ; then pushd /tmp && aws s3 cp $BUCKETKEY s3://$BUCKETNAME/ --acl public-read && popd; fi;
    - if [ $IS_PULL_REQUEST == "false" ] ; then echo "versionName=$COMMIT" > $JOB_STATE/deploy-nodecluster-basic-appfile.env; fi;

# Integrations are used to connect external resources to CI
# http://docs.shippable.com/integrations/overview/
integrations:
  # adding ECR integration so that credentials are available to CI Job
  # http://docs.shippable.com/integrations/imageRegistries/ecr/
  hub:
    - integrationName: dr-aws-keys
      type: ecr

resources:
  - name: deploy-nodecluster-basic-cluster
    type: cluster
    flags:
      - deploy-nodecluster-basic
    integration: dr-nc

  - name: deploy-nodecluster-basic-appfile
    type: file
    flags:
      - deploy-nodecluster-basic
    pointer:
      sourceName: https://s3.amazonaws.com/devops.recipes.nodecluster.packages/deploy-nodecluster-basic-appfile.tar.gz # points directly to publicly available file
    seed:
      versionName: test # dummy starting point

  - name: nodecluster-params
    type: params
    flags:
      - deploy-nodecluster-basic
    version:
      params:
        PORT: 8888
        ENVIRONMENT: nodeCluster

  - name: nodecluster-params-2
    type: params
    flags:
      - deploy-nodecluster-basic
    version:
      params:
        PORT: 9999
        ENVIRONMENT: prodCluster

  - name: nodecluster-params-final
    type: params
    flags:
      - deploy-nodecluster-basic
    version:
      params:
        PORT: 8080
        ENVIRONMENT: prodCluster


jobs:
  - name: deploy-nodecluster-basic_runCI
    type: runCI
    flags:
      - deploy-nodecluster-basic
    steps:
      - OUT: deploy-nodecluster-basic-appfile

  - name: deploy-nodecluster-basic-manifest
    type: manifest
    flags:
      - deploy-nodecluster-basic
    steps:
      - IN: nodecluster-params
      - IN: deploy-nodecluster-basic-appfile

  - name: deploy-nodecluster-basic-manifest-2
    type: manifest
    flags:
      - deploy-nodecluster-basic
    steps:
      - IN: nodecluster-params-2
      - IN: deploy-nodecluster-basic-appfile

  - name: deploy-nodecluster-basic-deploy
    type: deploy
    flags:
      - deploy-nodecluster-basic
    steps:
      - IN: deploy-nodecluster-basic-manifest
      - IN: deploy-nodecluster-basic-manifest-2
      - IN: nodecluster-params-final
        applyTo:
          - deploy-nodecluster-basic-manifest
      - IN: deploy-nodecluster-basic-cluster
      - TASK:
        - script: forever stopall
        - script: mkdir -p ~/deploy-nodecluster-basic-manifest && mkdir -p deploy-nodecluster-basic-manifest-2
        - script: cd ~/deploy-nodecluster-basic-manifest
        - script: source /tmp/shippable/deploy-nodecluster-basic-manifest/deploy-nodecluster-basic-appfile/package.env
        - script: tar zxf /tmp/shippable/deploy-nodecluster-basic-manifest/deploy-nodecluster-basic-appfile/deploy-nodecluster-basic-appfile.tar.gz
        - script: forever start ./bin/www
        - script: cd ~/deploy-nodecluster-basic-manifest-2
        - script: source /tmp/shippable/deploy-nodecluster-basic-manifest-2/deploy-nodecluster-basic-appfile/package.env
        - script: tar zxf /tmp/shippable/deploy-nodecluster-basic-manifest-2/deploy-nodecluster-basic-appfile/deploy-nodecluster-basic-appfile.tar.gz
        - script: forever start ./bin/www
